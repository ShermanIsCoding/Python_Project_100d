"""
既然有了列表这种数据结构，那么为什么还需要元组呢？

元组中的元素是无法修改的，事实上我们在项目中尤其是多线程环境
中可能更喜欢使用的是那些不变对象（一方面因为对象状态不能修改，
所以可以避免由此引起的不必要的程序错误，简单的说就是一个不变的
对象要比可变的对象更加容易维护；另一方面因为没有任何一个线程能
够修改不变对象的内部状态，一个不变对象自动就是线程安全的，这样
就可以省掉处理同步化的开销。一个不变对象可以方便的被共享访问）。
所以结论就是：如果不需要对元素进行添加、删除、修改的时候，可以
考虑使用元组，当然如果一个方法要返回多个值，使用元组也是不错的选择。

"""

def main():
    # 定义元组
    t = ('骆昊', 38, True, '四川成都')
    print(t)
    # 获取元组中的元素
    print(t[0])
    print(t[3])
    # 遍历元组中的值
    for member in t:
        print(member)
    # 重新给元组赋值
    # t[0] = '王大锤'  # TypeError
    # 变量t重新引用了新的元组原来的元组将被垃圾回收
    t = ('王大锤', 20, True, '云南昆明')
    print(t)
    # 将元组转换成列表
    person = list(t)
    print(person)
    # 列表是可以修改它的元素的
    person[0] = '李小龙'
    person[1] = 25
    print(person)
    # 将列表转换成元组
    fruits_list = ['apple', 'banana', 'orange']
    fruits_tuple = tuple(fruits_list)
    print(fruits_tuple)


if __name__ == '__main__':
    main()